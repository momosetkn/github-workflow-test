name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write   # Claude will post results back to PR
      issues: write          # Allow commenting on issues/PRs
      id-token: write
      actions: read          # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Detect Claude Command
        id: detect
        run: |
          body="${{ github.event.comment.body || github.event.review.body }}"
          echo "Comment body: $body"
          prompt="${body#*@claude }"
  
          # 前後の空白・改行を削除
          prompt="$(echo "$prompt" | xargs)"
          # 空文字ならデフォルト値を設定
          if [ -z "$prompt" ]; then
            prompt="このプルリクエストをレビューしてください"
          fi
          # すべての過去コメントから Notion URL を抽出
          # すべての過去コメントを取得
          comments=$(curl -sSL -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "${{ github.event.issue.comments_url }}")
 
          all_bodies=$(echo "$comments" | jq -r '.[].body // empty')
          notion_urls=$(echo "$all_bodies" | grep -o 'https://www.notion.so[^ )]*' | sort -u)
          if [ -n "$notion_urls" ]; then
            notion_context=""
            for url in $notion_urls; do
              info=$(curl -s "http://notion-mcp/api/fetch?url=$url")
              notion_context="$notion_context\nFrom $url:\n$info"
            done
            prompt="[Use NotionMcp]\n$notion_context\n\n$prompt"
          fi
          # 改行を変換
          {
            echo 'prompt<<EOF'
            printf '%s\n' "$prompt" | tr -d '\r'
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Create MCP Config
        run: |
          cat > /tmp/mcp-config.json << 'EOF'
          {
            "mcpServers": {
              "notionApi": {
                "command": "npx",
                "args": ["-y", "@notionhq/notion-mcp-server"],
                "env": {
                  "OPENAPI_MCP_HEADERS": "{\"Authorization\": \"Bearer ${{ secrets.NOTION_KEY }}\", \"Notion-Version\": \"2022-06-28\" }"
                }
              }
            }
          }
          EOF

#      - name: Run Claude Code
#        uses: anthropics/claude-code-action@v1
#        with:
#          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
#          claude_args: |
#            --mcp-config /tmp/mcp-config.json
#          prompt: ${{ steps.detect.outputs.prompt }}
#          additional_permissions: |
#            actions: read

      - name: Debug Output (instead of running Claude)
        run: |
          echo "Command: ${{ steps.detect.outputs.command }}"
          echo "Prompt: ${{ steps.detect.outputs.prompt }}"
