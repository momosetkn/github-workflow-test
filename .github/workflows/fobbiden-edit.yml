name: Check Migration Edit in PR

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "db/migration/**"

jobs:
  check-migration-edit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Decide comparison range
        id: range
        run: |
          if [ "${{ github.event.action }}" = "opened" ]; then
            echo "base=origin/${{ github.base_ref }}" >> $GITHUB_OUTPUT
            echo "head=HEAD" >> $GITHUB_OUTPUT
          else
            echo "base=${{ github.event.before }}" >> $GITHUB_OUTPUT
            echo "head=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Detect edited migration files
        id: detect
        run: |
          CHANGED=$(git diff --name-status ${{ steps.range.outputs.base }} ${{ steps.range.outputs.head }} -- db/migration)

          echo "Changed files:"
          echo "$CHANGED"

          if echo "$CHANGED" | grep -E '^(M|D)'; then
            echo "edited=true" >> $GITHUB_OUTPUT
          else
            echo "edited=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR if edited
        if: steps.detect.outputs.edited == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `
            ⚠️ **既存のマイグレーションファイルが編集または削除されています！**

            - 初回 push の場合: base ブランチとの差分に違反があります
            - 追加 push の場合: 直前の push との差分に違反があります
            - マイグレーションは原則 **追加のみ** が許可されています
            `;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
